<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        VmrHAAAAAElFTkSuQmCC
</value>
  </data>
</root>